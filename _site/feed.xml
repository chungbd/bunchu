<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.4.3">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2017-07-06T16:45:29+07:00</updated><id>http://localhost:4000/</id><title type="html">Chung Bui</title><subtitle>My biography, profile and curriculum vitae</subtitle><entry><title type="html">Application Lifecycle in iOS</title><link href="http://localhost:4000/Application-Lifecycle-in-iOS/" rel="alternate" type="text/html" title="Application Lifecycle in iOS" /><published>2017-06-16T22:00:00+07:00</published><updated>2017-06-16T22:00:00+07:00</updated><id>http://localhost:4000/Application-Lifecycle-in-iOS</id><content type="html" xml:base="http://localhost:4000/Application-Lifecycle-in-iOS/">&lt;h2 id=&quot;loading-application&quot;&gt;Loading Application&lt;/h2&gt;
&lt;ol&gt;
  &lt;li&gt;The user has just turned on his phone, and no applications are running expect for those that belong to the operating system.&lt;/li&gt;
  &lt;li&gt;Your application is &lt;strong&gt;not running.&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;After the user taps your app’s icon, &lt;strong&gt;Springboard&lt;/strong&gt; - the part of the OS that operates the Home screen of iOS - launches your app.&lt;/li&gt;
  &lt;li&gt;Your app, and the shared libraries it needs to execute, is loaded into memory while Springboard animates your &lt;em&gt;Default.png&lt;/em&gt; on the screen&lt;/li&gt;
  &lt;li&gt;Eventually, your app begins execution, and your &lt;em&gt;application delegate&lt;/em&gt; receives the appropriate notification.&lt;/li&gt;
  &lt;li&gt;When your application is running and in the foreground, &lt;strong&gt;it is in the active state.&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;stopping-application&quot;&gt;Stopping Application&lt;/h2&gt;
&lt;ol&gt;
  &lt;li&gt;On iOS, users tend to only use any given application for a few seconds before returning their phones to their pockets.
    &lt;ul&gt;
      &lt;li&gt;After the user has put away your app by pressing the Home button on her iPhone or iPad, your application enters &lt;strong&gt;the background state&lt;/strong&gt;&lt;/li&gt;
      &lt;li&gt;Typically, apps have 10 seconds to complete any database saves or other long-running tasks(though applications can request additional time from the OS).&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;When all the background processing is complete, the application finally becomes &lt;strong&gt;suspended state&lt;/strong&gt;.
    &lt;ul&gt;
      &lt;li&gt;While &lt;strong&gt;suspended&lt;/strong&gt;, applications remain in memory but may not execute code.&lt;/li&gt;
      &lt;li&gt;The state of your application is persisted.&lt;/li&gt;
      &lt;li&gt;If the user opens your application while it is suspended, it begins execution exactly where it left off.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;If memory becomes low, the OS can kill your app while it is in the suspended state. The user can also manually terminal your app from multitasking tray.
    &lt;ul&gt;
      &lt;li&gt;Once terminated, applications &lt;strong&gt;return to their initial state of not running.&lt;/strong&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;awaking-application&quot;&gt;Awaking Application&lt;/h2&gt;
&lt;ol&gt;
  &lt;li&gt;If the user receives a calendar alert, opens the multitasking tray, or gets a phone call, your application can be put into &lt;strong&gt;the inactive state.&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;The user can open your application without tapping its icon on the Home screen.
    &lt;ul&gt;
      &lt;li&gt;If your application receives local or push notifications, or if it is registered for custom URL scheme handing, the user can open it in any number of ways.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;reference&quot;&gt;Reference&lt;/h2&gt;
&lt;ol&gt;
  &lt;li&gt;&lt;a href=&quot;&quot;&gt;Chater 1 - iOS UICollectionView - The complete guide, 2nd Edition&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;</content><author><name>Bun Chu</name></author><category term="blog" /><category term="Foundation" /><category term="Swift" /><category term="Lifecycle" /><summary type="html">Loading Application The user has just turned on his phone, and no applications are running expect for those that belong to the operating system. Your application is not running. After the user taps your app’s icon, Springboard - the part of the OS that operates the Home screen of iOS - launches your app. Your app, and the shared libraries it needs to execute, is loaded into memory while Springboard animates your Default.png on the screen Eventually, your app begins execution, and your application delegate receives the appropriate notification. When your application is running and in the foreground, it is in the active state.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/assets/images/markdown.jpg" /></entry><entry><title type="html">Injection Plugin for Xcode</title><link href="http://localhost:4000/injection-plugin-in-xcode/" rel="alternate" type="text/html" title="Injection Plugin for Xcode" /><published>2017-05-22T19:30:00+07:00</published><updated>2017-05-22T19:30:00+07:00</updated><id>http://localhost:4000/injection-plugin-in-xcode</id><content type="html" xml:base="http://localhost:4000/injection-plugin-in-xcode/">&lt;h2 id=&quot;i---mục-đích&quot;&gt;I - Mục đích:&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/johnno1962/injectionforxcode/master/documentation/images/injected.gif&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Nó sẽ giả lập lại chế độ debug giống như trên nền tảng React Native. Nghĩa là bạn chỉ cần bấm một tổ hợp phím(ở đây là ‘Ctrl + =’), toàn bộ những thay đổi của bạn trên code sẽ được cập nhập trên Simulator - phần mềm giả lập thiết bị.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;ii---cài-đặt&quot;&gt;II - Cài đặt:&lt;/h2&gt;
&lt;p&gt;Mình sẽ trình bày cho việc sử dụng Injection trên Xcode và AppCode(cái này mới thịnh hành)&lt;/p&gt;
&lt;h3 id=&quot;xcode&quot;&gt;Xcode&lt;/h3&gt;
&lt;ol&gt;
  &lt;li&gt;Unsign Xcode: nghĩa là bạn sẽ phải tạo ra một phiên bản khác cho Xcode, để phục vụ quá trình injection.
    &lt;ul&gt;
      &lt;li&gt;Tải hoặc git clone &lt;a href=&quot;https://github.com/johntmcintosh/xcunsign&quot;&gt;https://github.com/johntmcintosh/xcunsign&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;Chạy trực tiếp script để tiến hành unsign.
Ví dụ: mình sử dụng phiên bản Xcode 8.2.1
&lt;img src=&quot;http://localhost:4000/assets/post/2017/injection/unsign.png&quot; alt=&quot;Markdowm Image&quot; /&gt;
&lt;img src=&quot;http://localhost:4000/assets/post/2017/injection/unsign_1.png&quot; alt=&quot;Markdowm Image&quot; /&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Cài đặt Injection plugin: có 2 cách&lt;/p&gt;

    &lt;p&gt;A. Tải file zip hoặc clone &lt;a href=&quot;https://github.com/johnno1962/injectionforxcode&quot;&gt;https://github.com/johnno1962/injectionforxcode&lt;/a&gt; - Mình sử dụng cách này.&lt;/p&gt;
    &lt;ul&gt;
      &lt;li&gt;Trong thư mục InjectionPluginLite, mở file .xcodeproj&lt;/li&gt;
      &lt;li&gt;Thực hiện build the scheme InjectionPluginLite&lt;/li&gt;
    &lt;/ul&gt;

    &lt;p&gt;B. Tải bản beta từ trang cá nhân của tác giả &lt;a href=&quot;http://johnholdsworth.com/injection.html&quot;&gt;http://johnholdsworth.com/injection.html&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href=&quot;https://johntmcintosh.com/blog/2016/10/03/code-injection-ios&quot;&gt;Tham khảo&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;appcode&quot;&gt;AppCode:&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Tải file jar mới nhất cho AppCode &lt;a href=&quot;https://raw.githubusercontent.com/johnno1962/InjectionApp/master/InjectionAppCode/Injection.jar&quot;&gt;tại đây&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Vào Preference -&amp;gt; Plugins -&amp;gt; Install plugin from disk -&amp;gt; Link to dowloaded jar file&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Thật sự là việc cài đặt này phụ thuộc rất nhiều vào việc cô có thương bạn ngày hôm đó không.&lt;/li&gt;
  &lt;li&gt;Mình đã mất một ngày ngồi chỉ để tìm cách làm sao cho nó chạy được trên AppCode và Xcode.&lt;/li&gt;
  &lt;li&gt;Mình khuyên các bạn sử dụng Xcode vì nó free và không gây nhiều lỗi như AppCode(thật sự là chả giá rất nhiều cho nó)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;ii---sử-dụng&quot;&gt;II - Sử dụng:&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;Trong một class của một View Controller bất gì của một màn hình nào đó.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;cách-1-sử-dụng-bên-trong-view-controller&quot;&gt;&lt;strong&gt;Cách 1:&lt;/strong&gt; sử dụng bên trong View Controller&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    func injected() {
        print(&quot;I've been injected: \(self)&quot;)
    }
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;ul&gt;
  &lt;li&gt;Thực hiện built và chạy trên Simulator.&lt;/li&gt;
  &lt;li&gt;Khi View Controller trên hiện ra. Nhấn tổ hợp phím ‘Ctrl + =’. Một đoạn log sẽ được hiện ra dưới Debug area như bên dưới. Nghĩa là bạn đã cài đặt và sử dụng thành công.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;http://localhost:4000/assets/post/2017/injection/unsign_2.png&quot; alt=&quot;Markdowm Image&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Mỗi lần sử dụng thao tác này, code sẽ chạy vào hàm injected, thực hiện dòng lệnh nếu có thay đổi code. Thay thử vài thao tác cơ bản để thấy sự khác biệt.
    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  func injected() {
      print(&quot;I've been injected: \(self)&quot;)
      view.backgroundColor = .darkText
  }
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;
    &lt;p&gt;&lt;img src=&quot;http://localhost:4000/assets/post/2017/injection/unsign_3.png&quot; alt=&quot;Markdowm Image&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;Vào nhớ Cmd + S để save lại trạng thái trước khi thử.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;cách-2-sử-dụng-một-view-controller-có-nhiệm-vụ-điều-hướng-đến-viewcontroller-cần-inject-code&quot;&gt;&lt;strong&gt;Cách 2:&lt;/strong&gt; Sử dụng một view controller có nhiệm vụ điều hướng đến viewcontroller cần inject code&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;Khởi tạo một navigation controller có root controller là TestingInjectionVC.&lt;/li&gt;
  &lt;li&gt;Trong TestingInjectionVC.swift, khởi tạo một bộ quan sát với định danh là INJECTION_BUNDLE_NOTIFICATION. Khi nhận được notification từ định danh trên, navigation hiện tại sẽ push đến injected view controller.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;http://localhost:4000/assets/post/2017/injection/injectionNoticationName.png&quot; alt=&quot;Markdowm Image&quot; /&gt;
&lt;img src=&quot;http://localhost:4000/assets/post/2017/injection/injectionNotication.png&quot; alt=&quot;Markdowm Image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Với mình, cách xử lý thứ 2 hiệu quả hơn cho những màn hình cần thiết lại giao diện, theo ý đồ của mình đó là view luôn được chạy lại.&lt;/li&gt;
  &lt;li&gt;Với cách 1, mình chỉ sử dụng khi muốn kiểm chứng với một vài chi tiết nhỏ thay đổi như màu, text conent.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;iii---sự-tồn-tại-của-plugin-này-và-trường-phái-chống-lại-interface-builder&quot;&gt;III - Sự tồn tại của Plugin này và trường phái chống lại Interface Builder&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;Về công dụng, Plugin này khiến khích bạn lập trình giao diện bằng code nhiều hơn. Nó làm bạn biết sự thay đổi của từng dòng code lên giao diện trong vòng 2 giây&lt;/li&gt;
  &lt;li&gt;Đối nghịch lại khi bạn sử dụng trên Interface Builder(một kiểu lập trình kéo thả giao diện, rất hợp với các designer muốn code giao diện), bạn sẽ phải rebuild lại ứng dụng để thấy sự thay đổi, quá trình đó thực hiện trong vòng 20 giây&lt;/li&gt;
  &lt;li&gt;Sự đối nghịch trên càng lớn hơn với những dự án lớn nhiều màn hình và kéo dài nhiều năm.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Một vài link để tham khảo về ưu nhược điểm khi sử dụng Interface Builder:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.raizlabs.com/dev/2016/08/ib-free-living-without-interface-builder/&quot;&gt;IB Free: Living Without Interface Builder and Loving It&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://blog.zeplin.io/life-without-interface-builder-adbb009d2068&quot;&gt;Life without Interface Builder&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.quora.com/Which-is-better-for-iOS-apps-storyboards-or-programmatic-development&quot;&gt;Which is better for iOS apps: storyboards or programmatic development?&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.quora.com/Does-the-Facebook-iOS-app-use-storyboards&quot;&gt;Does the Facebook iOS app use storyboards?&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;tham-khảo&quot;&gt;Tham khảo:&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/johnno1962/injectionforxcode&quot;&gt;https://github.com/johnno1962/injectionforxcode&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://johntmcintosh.com/blog/2016/10/03/code-injection-ios&quot;&gt;https://johntmcintosh.com/blog/2016/10/03/code-injection-ios&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://johntmcintosh.com/blog/2016/09/30/xcode8-extensions&quot;&gt;https://johntmcintosh.com/blog/2016/09/30/xcode8-extensions&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/johnno1962/InjectionApp&quot;&gt;https://github.com/johnno1962/InjectionApp&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://johnholdsworth.com/injection.html&quot;&gt;http://johnholdsworth.com/injection.html&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://karlbowden.com/quick-start-hot-reloading-in-swift/&quot;&gt;https://karlbowden.com/quick-start-hot-reloading-in-swift/&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;</content><author><name>bunchu</name></author><category term="blog" /><category term="injection" /><category term="xcode" /><category term="auto-layout" /><summary type="html">I - Mục đích:</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/assets/images/markdown.jpg" /></entry></feed>